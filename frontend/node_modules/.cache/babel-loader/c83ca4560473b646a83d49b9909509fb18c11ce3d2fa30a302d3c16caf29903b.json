{"ast":null,"code":"/**\r\n * Configuration for AI models used in the application\r\n */\n\n// OpenRouter models\nexport const OPENROUTER_MODELS = [{\n  id: \"deepseek-chat\",\n  name: \"DeepSeek Chat\",\n  fullPath: \"deepseek/deepseek-chat:free\",\n  provider: \"openrouter\",\n  description: \"Powerful open-source chat model with strong reasoning capabilities\",\n  priority: 1\n}, {\n  id: \"qwen3\",\n  name: \"Qwen 3\",\n  fullPath: \"qwen/qwen3-235b-a22b\",\n  provider: \"openrouter\",\n  description: \"High-performance 23.5B parameter language model with exceptional capabilities\",\n  priority: 2\n}];\n\n// OpenAI models\nexport const OPENAI_MODELS = [{\n  id: \"gpt-4o\",\n  name: \"GPT-4o\",\n  provider: \"openai\",\n  description: \"Latest multimodal GPT-4 model with optimal balance of capabilities\",\n  priority: 3\n}, {\n  id: \"gpt-4.1-mini\",\n  name: \"GPT-4.1 Mini\",\n  provider: \"openai\",\n  description: \"Smaller, faster GPT-4.1 variant with good reasoning abilities\",\n  priority: 4\n}, {\n  id: \"gpt-4.1-nano\",\n  name: \"GPT-4.1 Nano\",\n  provider: \"openai\",\n  description: \"Lightweight GPT-4.1 model for efficient, cost-effective operations\",\n  priority: 5\n}];\n\n// Combined list of all models\nexport const ALL_MODELS = [...OPENROUTER_MODELS, ...OPENAI_MODELS];\n\n/**\r\n * Get model details by ID\r\n * @param {string} modelId - The ID of the model to find\r\n * @returns {object|null} The model object or null if not found\r\n */\nexport const getModelById = modelId => {\n  return ALL_MODELS.find(model => model.id === modelId) || null;\n};\n\n/**\r\n * Get model name display text\r\n * @param {string} modelId - The ID of the model\r\n * @returns {string} User-friendly model name\r\n */\nexport const getModelDisplayName = modelId => {\n  const model = getModelById(modelId);\n  return model ? model.name : modelId;\n};","map":{"version":3,"names":["OPENROUTER_MODELS","id","name","fullPath","provider","description","priority","OPENAI_MODELS","ALL_MODELS","getModelById","modelId","find","model","getModelDisplayName"],"sources":["C:/Users/viswa/Downloads/Latex resume writer ai/frontend/src/utils/modelConfig.js"],"sourcesContent":["/**\r\n * Configuration for AI models used in the application\r\n */\r\n\r\n// OpenRouter models\r\nexport const OPENROUTER_MODELS = [\r\n  {\r\n    id: \"deepseek-chat\",\r\n    name: \"DeepSeek Chat\",\r\n    fullPath: \"deepseek/deepseek-chat:free\",\r\n    provider: \"openrouter\",\r\n    description: \"Powerful open-source chat model with strong reasoning capabilities\",\r\n    priority: 1\r\n  },\r\n  {\r\n    id: \"qwen3\",\r\n    name: \"Qwen 3\",\r\n    fullPath: \"qwen/qwen3-235b-a22b\",\r\n    provider: \"openrouter\",\r\n    description: \"High-performance 23.5B parameter language model with exceptional capabilities\",\r\n    priority: 2\r\n  },\r\n];\r\n\r\n// OpenAI models\r\nexport const OPENAI_MODELS = [\r\n  {\r\n    id: \"gpt-4o\",\r\n    name: \"GPT-4o\",\r\n    provider: \"openai\",\r\n    description: \"Latest multimodal GPT-4 model with optimal balance of capabilities\",\r\n    priority: 3\r\n  },\r\n  {\r\n    id: \"gpt-4.1-mini\",\r\n    name: \"GPT-4.1 Mini\",\r\n    provider: \"openai\",\r\n    description: \"Smaller, faster GPT-4.1 variant with good reasoning abilities\",\r\n    priority: 4\r\n  },\r\n  {\r\n    id: \"gpt-4.1-nano\",\r\n    name: \"GPT-4.1 Nano\",\r\n    provider: \"openai\",\r\n    description: \"Lightweight GPT-4.1 model for efficient, cost-effective operations\",\r\n    priority: 5\r\n  }\r\n];\r\n\r\n// Combined list of all models\r\nexport const ALL_MODELS = [...OPENROUTER_MODELS, ...OPENAI_MODELS];\r\n\r\n/**\r\n * Get model details by ID\r\n * @param {string} modelId - The ID of the model to find\r\n * @returns {object|null} The model object or null if not found\r\n */\r\nexport const getModelById = (modelId) => {\r\n  return ALL_MODELS.find(model => model.id === modelId) || null;\r\n};\r\n\r\n/**\r\n * Get model name display text\r\n * @param {string} modelId - The ID of the model\r\n * @returns {string} User-friendly model name\r\n */\r\nexport const getModelDisplayName = (modelId) => {\r\n  const model = getModelById(modelId);\r\n  return model ? model.name : modelId;\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA,OAAO,MAAMA,iBAAiB,GAAG,CAC/B;EACEC,EAAE,EAAE,eAAe;EACnBC,IAAI,EAAE,eAAe;EACrBC,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,oEAAoE;EACjFC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,OAAO;EACXC,IAAI,EAAE,QAAQ;EACdC,QAAQ,EAAE,sBAAsB;EAChCC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,+EAA+E;EAC5FC,QAAQ,EAAE;AACZ,CAAC,CACF;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,CAC3B;EACEN,EAAE,EAAE,QAAQ;EACZC,IAAI,EAAE,QAAQ;EACdE,QAAQ,EAAE,QAAQ;EAClBC,WAAW,EAAE,oEAAoE;EACjFC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,cAAc;EAClBC,IAAI,EAAE,cAAc;EACpBE,QAAQ,EAAE,QAAQ;EAClBC,WAAW,EAAE,+DAA+D;EAC5EC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,cAAc;EAClBC,IAAI,EAAE,cAAc;EACpBE,QAAQ,EAAE,QAAQ;EAClBC,WAAW,EAAE,oEAAoE;EACjFC,QAAQ,EAAE;AACZ,CAAC,CACF;;AAED;AACA,OAAO,MAAME,UAAU,GAAG,CAAC,GAAGR,iBAAiB,EAAE,GAAGO,aAAa,CAAC;;AAElE;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,YAAY,GAAIC,OAAO,IAAK;EACvC,OAAOF,UAAU,CAACG,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACX,EAAE,KAAKS,OAAO,CAAC,IAAI,IAAI;AAC/D,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,mBAAmB,GAAIH,OAAO,IAAK;EAC9C,MAAME,KAAK,GAAGH,YAAY,CAACC,OAAO,CAAC;EACnC,OAAOE,KAAK,GAAGA,KAAK,CAACV,IAAI,GAAGQ,OAAO;AACrC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}