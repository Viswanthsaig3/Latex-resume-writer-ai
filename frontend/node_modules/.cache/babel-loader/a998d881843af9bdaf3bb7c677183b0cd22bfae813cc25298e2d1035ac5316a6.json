{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\viswa\\\\Downloads\\\\Latex resume writer ai\\\\frontend\\\\src\\\\components\\\\AIAssistant.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: {\n    position: 'absolute',\n    bottom: '20px',\n    left: '20px',\n    width: 'calc(50% - 40px)',\n    maxHeight: '300px',\n    backgroundColor: '#ffffff',\n    borderRadius: '10px',\n    boxShadow: '0 10px 25px rgba(0, 0, 0, 0.2)',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden',\n    zIndex: 1000,\n    border: '1px solid #e5e7eb',\n    transition: 'all 0.3s ease'\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px 15px',\n    backgroundColor: '#1f2937',\n    color: 'white',\n    fontWeight: 600\n  },\n  minimized: {\n    height: '50px',\n    overflow: 'hidden'\n  },\n  body: {\n    padding: '10px 15px',\n    overflowY: 'auto',\n    flex: 1,\n    backgroundColor: '#f9fafb'\n  },\n  chatBox: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '10px',\n    maxHeight: '200px',\n    overflowY: 'auto'\n  },\n  message: {\n    padding: '10px',\n    borderRadius: '8px',\n    maxWidth: '85%',\n    wordBreak: 'break-word'\n  },\n  userMessage: {\n    backgroundColor: '#3b82f6',\n    color: 'white',\n    alignSelf: 'flex-end'\n  },\n  aiMessage: {\n    backgroundColor: '#e5e7eb',\n    color: '#1f2937',\n    alignSelf: 'flex-start'\n  },\n  inputContainer: {\n    display: 'flex',\n    borderTop: '1px solid #e5e7eb',\n    padding: '10px',\n    backgroundColor: 'white'\n  },\n  input: {\n    flex: 1,\n    padding: '10px',\n    border: '1px solid #d1d5db',\n    borderRadius: '6px',\n    fontSize: '14px',\n    outline: 'none'\n  },\n  button: {\n    padding: '0 15px',\n    backgroundColor: '#3b82f6',\n    color: 'white',\n    borderRadius: '6px',\n    marginLeft: '10px',\n    border: 'none',\n    cursor: 'pointer',\n    fontSize: '14px',\n    fontWeight: 600\n  },\n  toggleButton: {\n    backgroundColor: 'transparent',\n    border: 'none',\n    color: 'white',\n    cursor: 'pointer',\n    fontSize: '18px'\n  },\n  loadingSpinner: {\n    display: 'inline-block',\n    width: '20px',\n    height: '20px',\n    border: '2px solid rgba(255, 255, 255, 0.3)',\n    borderRadius: '50%',\n    borderTopColor: 'white',\n    animation: 'spin 1s ease-in-out infinite'\n  },\n  codeBlock: {\n    backgroundColor: '#1e1e1e',\n    color: '#d4d4d4',\n    padding: '10px',\n    borderRadius: '4px',\n    fontFamily: \"'Fira Code', monospace\",\n    fontSize: '13px',\n    overflowX: 'auto',\n    whiteSpace: 'pre-wrap'\n  },\n  latexBlock: {\n    backgroundColor: '#f8f8f8',\n    padding: '10px',\n    borderLeft: '3px solid #3b82f6',\n    fontFamily: \"'Fira Code', monospace\",\n    fontSize: '13px',\n    overflowX: 'auto'\n  }\n};\n\n// Function to parse markdown-like syntax for code and LaTeX blocks\nconst formatMessage = message => {\n  if (!message) return '';\n\n  // Replace code blocks with styled divs\n  const codeBlockRegex = /```(latex)?\\n([\\s\\S]*?)```/g;\n  let parts = [];\n  let lastIndex = 0;\n  let match;\n  while ((match = codeBlockRegex.exec(message)) !== null) {\n    // Add text before the code block\n    if (match.index > lastIndex) {\n      parts.push({\n        type: 'text',\n        content: message.substring(lastIndex, match.index)\n      });\n    }\n\n    // Add the code block\n    const isLatex = match[1] === 'latex';\n    parts.push({\n      type: isLatex ? 'latex' : 'code',\n      content: match[2]\n    });\n    lastIndex = match.index + match[0].length;\n  }\n\n  // Add any remaining text\n  if (lastIndex < message.length) {\n    parts.push({\n      type: 'text',\n      content: message.substring(lastIndex)\n    });\n  }\n\n  // Render the parts\n  return parts.map((part, index) => {\n    if (part.type === 'text') {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '5px 0'\n        },\n        children: part.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 14\n      }, this);\n    } else if (part.type === 'latex') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.latexBlock,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontWeight: 'bold',\n            marginBottom: '5px'\n          },\n          children: \"LaTeX:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), part.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.codeBlock,\n        children: part.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 14\n      }, this);\n    }\n  });\n};\nfunction AIAssistant({\n  latexCode,\n  onApplyChanges\n}) {\n  _s();\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [prompt, setPrompt] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversation, setConversation] = useState([{\n    role: 'ai',\n    content: 'Hello! I can help improve your resume. Ask me questions or request specific improvements.'\n  }]);\n  const chatboxRef = useRef(null);\n\n  // Auto-scroll to bottom of chat when conversation updates\n  useEffect(() => {\n    if (chatboxRef.current) {\n      chatboxRef.current.scrollTop = chatboxRef.current.scrollHeight;\n    }\n  }, [conversation]);\n  const handleSendPrompt = async () => {\n    if (!prompt.trim()) return;\n\n    // Add user message to conversation\n    const userMessage = {\n      role: 'user',\n      content: prompt\n    };\n    setConversation(prev => [...prev, userMessage]);\n\n    // Clear input field\n    setPrompt('');\n\n    // Start loading indicator\n    setIsLoading(true);\n    try {\n      // Make API call\n      const response = await axios.post('http://localhost:5001/ai/improve-resume', {\n        prompt,\n        latex: latexCode\n      });\n\n      // Add AI response to conversation\n      if (response.data && response.data.success) {\n        setConversation(prev => [...prev, {\n          role: 'ai',\n          content: response.data.response\n        }]);\n      } else {\n        var _response$data;\n        throw new Error(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.error) || 'Failed to get AI response');\n      }\n    } catch (error) {\n      console.error('Error getting AI response:', error);\n      setConversation(prev => [...prev, {\n        role: 'ai',\n        content: `Sorry, I encountered an error: ${error.message || 'Unknown error'}`\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleApplyChanges = latexContent => {\n    if (onApplyChanges && latexContent) {\n      // Extract LaTeX code from message\n      const latexMatch = latexContent.match(/```latex\\n([\\s\\S]*?)```/);\n      if (latexMatch && latexMatch[1]) {\n        onApplyChanges(latexMatch[1]);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      ...styles.container,\n      ...(isMinimized ? styles.minimized : {})\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Resume AI Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.toggleButton,\n        onClick: () => setIsMinimized(!isMinimized),\n        children: isMinimized ? '▲' : '▼'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), !isMinimized && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.body,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.chatBox,\n          ref: chatboxRef,\n          children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              ...styles.message,\n              ...(msg.role === 'user' ? styles.userMessage : styles.aiMessage)\n            },\n            children: msg.role === 'ai' ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [formatMessage(msg.content), msg.content.includes('```latex') && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleApplyChanges(msg.content),\n                style: {\n                  marginTop: '10px',\n                  padding: '5px 10px',\n                  backgroundColor: '#22c55e',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '4px',\n                  cursor: 'pointer'\n                },\n                children: \"Apply Changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 21\n            }, this) : msg.content\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Ask about improving your resume...\",\n          value: prompt,\n          onChange: e => setPrompt(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && handleSendPrompt(),\n          style: styles.input,\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendPrompt,\n          style: styles.button,\n          disabled: isLoading,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.loadingSpinner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this) : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n}\n_s(AIAssistant, \"ZvHrIprAiwtDl1Wa81MUlVQA3NY=\");\n_c = AIAssistant;\nexport default AIAssistant;\nvar _c;\n$RefreshReg$(_c, \"AIAssistant\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","styles","container","position","bottom","left","width","maxHeight","backgroundColor","borderRadius","boxShadow","display","flexDirection","overflow","zIndex","border","transition","header","justifyContent","alignItems","padding","color","fontWeight","minimized","height","body","overflowY","flex","chatBox","gap","message","maxWidth","wordBreak","userMessage","alignSelf","aiMessage","inputContainer","borderTop","input","fontSize","outline","button","marginLeft","cursor","toggleButton","loadingSpinner","borderTopColor","animation","codeBlock","fontFamily","overflowX","whiteSpace","latexBlock","borderLeft","formatMessage","codeBlockRegex","parts","lastIndex","match","exec","index","push","type","content","substring","isLatex","length","map","part","style","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","AIAssistant","latexCode","onApplyChanges","_s","isMinimized","setIsMinimized","prompt","setPrompt","isLoading","setIsLoading","conversation","setConversation","role","chatboxRef","current","scrollTop","scrollHeight","handleSendPrompt","trim","prev","response","post","latex","data","success","_response$data","Error","error","console","handleApplyChanges","latexContent","latexMatch","onClick","ref","msg","includes","marginTop","placeholder","value","onChange","e","target","onKeyPress","key","disabled","_c","$RefreshReg$"],"sources":["C:/Users/viswa/Downloads/Latex resume writer ai/frontend/src/components/AIAssistant.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst styles = {\r\n  container: {\r\n    position: 'absolute',\r\n    bottom: '20px',\r\n    left: '20px',\r\n    width: 'calc(50% - 40px)',\r\n    maxHeight: '300px',\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: '10px',\r\n    boxShadow: '0 10px 25px rgba(0, 0, 0, 0.2)',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflow: 'hidden',\r\n    zIndex: 1000,\r\n    border: '1px solid #e5e7eb',\r\n    transition: 'all 0.3s ease',\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '10px 15px',\r\n    backgroundColor: '#1f2937',\r\n    color: 'white',\r\n    fontWeight: 600,\r\n  },\r\n  minimized: {\r\n    height: '50px',\r\n    overflow: 'hidden',\r\n  },\r\n  body: {\r\n    padding: '10px 15px',\r\n    overflowY: 'auto',\r\n    flex: 1,\r\n    backgroundColor: '#f9fafb',\r\n  },\r\n  chatBox: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '10px',\r\n    maxHeight: '200px',\r\n    overflowY: 'auto',\r\n  },\r\n  message: {\r\n    padding: '10px',\r\n    borderRadius: '8px',\r\n    maxWidth: '85%',\r\n    wordBreak: 'break-word',\r\n  },\r\n  userMessage: {\r\n    backgroundColor: '#3b82f6',\r\n    color: 'white',\r\n    alignSelf: 'flex-end',\r\n  },\r\n  aiMessage: {\r\n    backgroundColor: '#e5e7eb',\r\n    color: '#1f2937',\r\n    alignSelf: 'flex-start',\r\n  },\r\n  inputContainer: {\r\n    display: 'flex',\r\n    borderTop: '1px solid #e5e7eb',\r\n    padding: '10px',\r\n    backgroundColor: 'white',\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    padding: '10px',\r\n    border: '1px solid #d1d5db',\r\n    borderRadius: '6px',\r\n    fontSize: '14px',\r\n    outline: 'none',\r\n  },\r\n  button: {\r\n    padding: '0 15px',\r\n    backgroundColor: '#3b82f6',\r\n    color: 'white',\r\n    borderRadius: '6px',\r\n    marginLeft: '10px',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n    fontSize: '14px',\r\n    fontWeight: 600,\r\n  },\r\n  toggleButton: {\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    color: 'white',\r\n    cursor: 'pointer',\r\n    fontSize: '18px',\r\n  },\r\n  loadingSpinner: {\r\n    display: 'inline-block',\r\n    width: '20px',\r\n    height: '20px',\r\n    border: '2px solid rgba(255, 255, 255, 0.3)',\r\n    borderRadius: '50%',\r\n    borderTopColor: 'white',\r\n    animation: 'spin 1s ease-in-out infinite',\r\n  },\r\n  codeBlock: {\r\n    backgroundColor: '#1e1e1e',\r\n    color: '#d4d4d4',\r\n    padding: '10px',\r\n    borderRadius: '4px',\r\n    fontFamily: \"'Fira Code', monospace\",\r\n    fontSize: '13px',\r\n    overflowX: 'auto',\r\n    whiteSpace: 'pre-wrap',\r\n  },\r\n  latexBlock: {\r\n    backgroundColor: '#f8f8f8',\r\n    padding: '10px',\r\n    borderLeft: '3px solid #3b82f6',\r\n    fontFamily: \"'Fira Code', monospace\",\r\n    fontSize: '13px',\r\n    overflowX: 'auto',\r\n  },\r\n};\r\n\r\n// Function to parse markdown-like syntax for code and LaTeX blocks\r\nconst formatMessage = (message) => {\r\n  if (!message) return '';\r\n  \r\n  // Replace code blocks with styled divs\r\n  const codeBlockRegex = /```(latex)?\\n([\\s\\S]*?)```/g;\r\n  \r\n  let parts = [];\r\n  let lastIndex = 0;\r\n  let match;\r\n  \r\n  while ((match = codeBlockRegex.exec(message)) !== null) {\r\n    // Add text before the code block\r\n    if (match.index > lastIndex) {\r\n      parts.push({\r\n        type: 'text',\r\n        content: message.substring(lastIndex, match.index)\r\n      });\r\n    }\r\n    \r\n    // Add the code block\r\n    const isLatex = match[1] === 'latex';\r\n    parts.push({\r\n      type: isLatex ? 'latex' : 'code',\r\n      content: match[2]\r\n    });\r\n    \r\n    lastIndex = match.index + match[0].length;\r\n  }\r\n  \r\n  // Add any remaining text\r\n  if (lastIndex < message.length) {\r\n    parts.push({\r\n      type: 'text',\r\n      content: message.substring(lastIndex)\r\n    });\r\n  }\r\n  \r\n  // Render the parts\r\n  return parts.map((part, index) => {\r\n    if (part.type === 'text') {\r\n      return <p key={index} style={{margin: '5px 0'}}>{part.content}</p>;\r\n    } else if (part.type === 'latex') {\r\n      return (\r\n        <div key={index} style={styles.latexBlock}>\r\n          <div style={{fontWeight: 'bold', marginBottom: '5px'}}>LaTeX:</div>\r\n          {part.content}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div key={index} style={styles.codeBlock}>{part.content}</div>;\r\n    }\r\n  });\r\n};\r\n\r\nfunction AIAssistant({ latexCode, onApplyChanges }) {\r\n  const [isMinimized, setIsMinimized] = useState(false);\r\n  const [prompt, setPrompt] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [conversation, setConversation] = useState([\r\n    { \r\n      role: 'ai', \r\n      content: 'Hello! I can help improve your resume. Ask me questions or request specific improvements.'\r\n    }\r\n  ]);\r\n  const chatboxRef = useRef(null);\r\n  \r\n  // Auto-scroll to bottom of chat when conversation updates\r\n  useEffect(() => {\r\n    if (chatboxRef.current) {\r\n      chatboxRef.current.scrollTop = chatboxRef.current.scrollHeight;\r\n    }\r\n  }, [conversation]);\r\n  \r\n  const handleSendPrompt = async () => {\r\n    if (!prompt.trim()) return;\r\n    \r\n    // Add user message to conversation\r\n    const userMessage = { role: 'user', content: prompt };\r\n    setConversation(prev => [...prev, userMessage]);\r\n    \r\n    // Clear input field\r\n    setPrompt('');\r\n    \r\n    // Start loading indicator\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // Make API call\r\n      const response = await axios.post('http://localhost:5001/ai/improve-resume', {\r\n        prompt,\r\n        latex: latexCode\r\n      });\r\n      \r\n      // Add AI response to conversation\r\n      if (response.data && response.data.success) {\r\n        setConversation(prev => [...prev, { role: 'ai', content: response.data.response }]);\r\n      } else {\r\n        throw new Error(response.data?.error || 'Failed to get AI response');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting AI response:', error);\r\n      setConversation(prev => [\r\n        ...prev, \r\n        { \r\n          role: 'ai', \r\n          content: `Sorry, I encountered an error: ${error.message || 'Unknown error'}`\r\n        }\r\n      ]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleApplyChanges = (latexContent) => {\r\n    if (onApplyChanges && latexContent) {\r\n      // Extract LaTeX code from message\r\n      const latexMatch = latexContent.match(/```latex\\n([\\s\\S]*?)```/);\r\n      if (latexMatch && latexMatch[1]) {\r\n        onApplyChanges(latexMatch[1]);\r\n      }\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div style={{...styles.container, ...(isMinimized ? styles.minimized : {})}}>\r\n      <div style={styles.header}>\r\n        <div>Resume AI Assistant</div>\r\n        <button\r\n          style={styles.toggleButton}\r\n          onClick={() => setIsMinimized(!isMinimized)}\r\n        >\r\n          {isMinimized ? '▲' : '▼'}\r\n        </button>\r\n      </div>\r\n      \r\n      {!isMinimized && (\r\n        <>\r\n          <div style={styles.body}>\r\n            <div style={styles.chatBox} ref={chatboxRef}>\r\n              {conversation.map((msg, index) => (\r\n                <div\r\n                  key={index}\r\n                  style={{\r\n                    ...styles.message,\r\n                    ...(msg.role === 'user' ? styles.userMessage : styles.aiMessage)\r\n                  }}\r\n                >\r\n                  {msg.role === 'ai' ? (\r\n                    <div>\r\n                      {formatMessage(msg.content)}\r\n                      {msg.content.includes('```latex') && (\r\n                        <button\r\n                          onClick={() => handleApplyChanges(msg.content)}\r\n                          style={{\r\n                            marginTop: '10px',\r\n                            padding: '5px 10px',\r\n                            backgroundColor: '#22c55e',\r\n                            color: 'white',\r\n                            border: 'none',\r\n                            borderRadius: '4px',\r\n                            cursor: 'pointer',\r\n                          }}\r\n                        >\r\n                          Apply Changes\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  ) : (\r\n                    msg.content\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          <div style={styles.inputContainer}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Ask about improving your resume...\"\r\n              value={prompt}\r\n              onChange={(e) => setPrompt(e.target.value)}\r\n              onKeyPress={(e) => e.key === 'Enter' && handleSendPrompt()}\r\n              style={styles.input}\r\n              disabled={isLoading}\r\n            />\r\n            <button\r\n              onClick={handleSendPrompt}\r\n              style={styles.button}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? (\r\n                <div style={styles.loadingSpinner}></div>\r\n              ) : (\r\n                'Send'\r\n              )}\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AIAssistant;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}