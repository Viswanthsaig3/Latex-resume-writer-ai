{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\viswa\\\\Downloads\\\\Latex resume writer ai\\\\frontend\\\\src\\\\components\\\\AIAssistant.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport ModelSelector from './ModelSelector';\nimport '../styles/AIAssistant.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AIAssistant({\n  latexCode,\n  onApplyChanges,\n  darkMode\n}) {\n  _s();\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [prompt, setPrompt] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedModel, setSelectedModel] = useState('deepseek-chat');\n  const [conversation, setConversation] = useState([{\n    role: 'ai',\n    content: 'Hello! I can help improve your resume using advanced AI. Currently using DeepSeek Chat. What would you like me to help with?'\n  }]);\n  const chatBodyRef = useRef(null);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    if (chatBodyRef.current) {\n      chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\n    }\n\n    // Focus input when assistant is opened\n    if (!isMinimized && !isCollapsed && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [conversation, isMinimized, isCollapsed]);\n  const handleSendPrompt = async () => {\n    if (!prompt.trim() || isLoading) return;\n\n    // Add user message to conversation\n    const userMessage = {\n      role: 'user',\n      content: prompt\n    };\n    setConversation(prev => [...prev, userMessage]);\n\n    // Clear input field\n    setPrompt('');\n\n    // Start loading\n    setIsLoading(true);\n\n    // Save the prompt for potential retry\n    const currentPrompt = prompt;\n    try {\n      // Add temporary \"thinking\" message\n      setConversation(prev => [...prev, {\n        role: 'ai',\n        content: `Thinking... (using ${selectedModel})`,\n        isTemporary: true\n      }]);\n\n      // Call the backend API\n      const response = await axios.post('http://localhost:5001/ai/improve-resume', {\n        prompt: currentPrompt,\n        latex: latexCode,\n        modelId: selectedModel\n      }, {\n        timeout: 120000 // 2 minutes timeout\n      });\n\n      // Remove temporary message\n      setConversation(prev => prev.filter(msg => !msg.isTemporary));\n      if (response.data && response.data.success) {\n        setConversation(prev => [...prev, {\n          role: 'ai',\n          content: response.data.response\n        }]);\n      } else {\n        var _response$data;\n        throw new Error(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.error) || 'Failed to get response from AI');\n      }\n    } catch (error) {\n      console.error('Error getting AI response:', error);\n\n      // Remove temporary message\n      setConversation(prev => prev.filter(msg => !msg.isTemporary));\n\n      // Add error message\n      let errorMsg = \"I'm having trouble connecting. Please try again or check your network connection.\";\n      if (error.response) {\n        var _error$response$data;\n        errorMsg = `Server error: ${error.response.status} - ${((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`;\n      }\n      setConversation(prev => [...prev, {\n        role: 'ai',\n        content: errorMsg\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Extract and apply LaTeX code\n  const handleApplyChanges = content => {\n    const latexMatch = content.match(/```latex\\n([\\s\\S]*?)```/);\n    if (latexMatch && latexMatch[1]) {\n      onApplyChanges(latexMatch[1]);\n    }\n  };\n\n  // Format message content - handle LaTeX code blocks\n  const formatMessage = content => {\n    if (!content) return '';\n    if (content.startsWith('Thinking...')) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thinking-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"thinking-text\",\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Split by code blocks\n    const parts = [];\n    let lastIndex = 0;\n\n    // Match ```latex ... ``` blocks\n    const codeBlockRegex = /```latex\\n([\\s\\S]*?)```/g;\n    let match;\n    while ((match = codeBlockRegex.exec(content)) !== null) {\n      // Add text before code block\n      if (match.index > lastIndex) {\n        parts.push({\n          type: 'text',\n          content: content.substring(lastIndex, match.index)\n        });\n      }\n\n      // Add the code block\n      parts.push({\n        type: 'latex',\n        content: match[1]\n      });\n      lastIndex = match.index + match[0].length;\n    }\n\n    // Add any remaining text\n    if (lastIndex < content.length) {\n      parts.push({\n        type: 'text',\n        content: content.substring(lastIndex)\n      });\n    }\n\n    // Render parts\n    return parts.map((part, index) => {\n      if (part.type === 'text') {\n        // Format markdown-style syntax in text parts\n        const formattedText = part.content.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>').replace(/\\*(.*?)\\*/g, '<em>$1</em>').replace(/`(.*?)`/g, '<code>$1</code>');\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-content\",\n          dangerouslySetInnerHTML: {\n            __html: formattedText\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"latex-block-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"latex-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"latex-header\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"LaTeX Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n              children: part.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-btn\",\n            onClick: () => handleApplyChanges('```latex\\n' + part.content + '```'),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-check-circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), \" Apply Changes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendPrompt();\n    }\n  };\n  const handleMaximize = () => {\n    setIsMinimized(false);\n    setIsCollapsed(false);\n  };\n  const handleMinimize = () => {\n    setIsMinimized(true);\n    setIsCollapsed(false);\n  };\n  const handleCollapse = () => {\n    setIsCollapsed(!isCollapsed);\n    setIsMinimized(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `ai-assistant ${darkMode ? 'dark-mode' : ''} ${isMinimized ? 'minimized' : ''} ${isCollapsed ? 'collapsed' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assistant-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"assistant-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-robot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"AI Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"assistant-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"assistant-control\",\n          onClick: handleMinimize,\n          title: \"Minimize\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-window-minimize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"assistant-control\",\n          onClick: handleCollapse,\n          title: isCollapsed ? \"Expand\" : \"Collapse\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fa fa-${isCollapsed ? 'expand' : 'compress'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"assistant-control close\",\n          onClick: () => setIsMinimized(true),\n          title: \"Close\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), !isMinimized && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [!isCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-selector-container\",\n        children: /*#__PURE__*/_jsxDEV(ModelSelector, {\n          selectedModel: selectedModel,\n          onModelChange: setSelectedModel,\n          darkMode: darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"assistant-body\",\n        ref: chatBodyRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.role}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar\",\n              children: msg.role === 'ai' ? /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-robot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: msg.role === 'ai' ? formatMessage(msg.content) : msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"assistant-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: inputRef,\n          value: prompt,\n          onChange: e => setPrompt(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Ask how to improve your resume...\",\n          disabled: isLoading,\n          rows: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `send-button ${isLoading || !prompt.trim() ? 'disabled' : ''}`,\n          onClick: handleSendPrompt,\n          disabled: isLoading || !prompt.trim(),\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-paper-plane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), isMinimized && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"minimized-indicator\",\n      onClick: handleMaximize,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-robot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Open AI Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n_s(AIAssistant, \"HWoGd0cXZiuLfQ2PEA5PASNAsiQ=\");\n_c = AIAssistant;\nexport default AIAssistant;\nvar _c;\n$RefreshReg$(_c, \"AIAssistant\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","ModelSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","AIAssistant","latexCode","onApplyChanges","darkMode","_s","isMinimized","setIsMinimized","isCollapsed","setIsCollapsed","prompt","setPrompt","isLoading","setIsLoading","selectedModel","setSelectedModel","conversation","setConversation","role","content","chatBodyRef","inputRef","current","scrollTop","scrollHeight","focus","handleSendPrompt","trim","userMessage","prev","currentPrompt","isTemporary","response","post","latex","modelId","timeout","filter","msg","data","success","_response$data","Error","error","console","errorMsg","_error$response$data","status","message","handleApplyChanges","latexMatch","match","formatMessage","startsWith","className","children","fileName","_jsxFileName","lineNumber","columnNumber","parts","lastIndex","codeBlockRegex","exec","index","push","type","substring","length","map","part","formattedText","replace","dangerouslySetInnerHTML","__html","onClick","handleKeyPress","e","key","shiftKey","preventDefault","handleMaximize","handleMinimize","handleCollapse","title","onModelChange","ref","value","onChange","target","onKeyPress","placeholder","disabled","rows","_c","$RefreshReg$"],"sources":["C:/Users/viswa/Downloads/Latex resume writer ai/frontend/src/components/AIAssistant.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ModelSelector from './ModelSelector';\r\nimport '../styles/AIAssistant.css';\r\n\r\nfunction AIAssistant({ latexCode, onApplyChanges, darkMode }) {\r\n  const [isMinimized, setIsMinimized] = useState(false);\r\n  const [isCollapsed, setIsCollapsed] = useState(false);\r\n  const [prompt, setPrompt] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedModel, setSelectedModel] = useState('deepseek-chat');\r\n  const [conversation, setConversation] = useState([\r\n    {\r\n      role: 'ai',\r\n      content: 'Hello! I can help improve your resume using advanced AI. Currently using DeepSeek Chat. What would you like me to help with?'\r\n    }\r\n  ]);\r\n  \r\n  const chatBodyRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    if (chatBodyRef.current) {\r\n      chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\r\n    }\r\n    \r\n    // Focus input when assistant is opened\r\n    if (!isMinimized && !isCollapsed && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [conversation, isMinimized, isCollapsed]);\r\n  \r\n  const handleSendPrompt = async () => {\r\n    if (!prompt.trim() || isLoading) return;\r\n    \r\n    // Add user message to conversation\r\n    const userMessage = { role: 'user', content: prompt };\r\n    setConversation(prev => [...prev, userMessage]);\r\n    \r\n    // Clear input field\r\n    setPrompt('');\r\n    \r\n    // Start loading\r\n    setIsLoading(true);\r\n    \r\n    // Save the prompt for potential retry\r\n    const currentPrompt = prompt;\r\n    \r\n    try {\r\n      // Add temporary \"thinking\" message\r\n      setConversation(prev => [\r\n        ...prev, \r\n        { role: 'ai', content: `Thinking... (using ${selectedModel})`, isTemporary: true }\r\n      ]);\r\n      \r\n      // Call the backend API\r\n      const response = await axios.post('http://localhost:5001/ai/improve-resume', {\r\n        prompt: currentPrompt,\r\n        latex: latexCode,\r\n        modelId: selectedModel\r\n      }, { \r\n        timeout: 120000 // 2 minutes timeout\r\n      });\r\n      \r\n      // Remove temporary message\r\n      setConversation(prev => prev.filter(msg => !msg.isTemporary));\r\n      \r\n      if (response.data && response.data.success) {\r\n        setConversation(prev => [...prev, { role: 'ai', content: response.data.response }]);\r\n      } else {\r\n        throw new Error(response.data?.error || 'Failed to get response from AI');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting AI response:', error);\r\n      \r\n      // Remove temporary message\r\n      setConversation(prev => prev.filter(msg => !msg.isTemporary));\r\n      \r\n      // Add error message\r\n      let errorMsg = \"I'm having trouble connecting. Please try again or check your network connection.\";\r\n      \r\n      if (error.response) {\r\n        errorMsg = `Server error: ${error.response.status} - ${error.response.data?.message || error.message}`;\r\n      }\r\n      \r\n      setConversation(prev => [\r\n        ...prev, \r\n        { role: 'ai', content: errorMsg }\r\n      ]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Extract and apply LaTeX code\r\n  const handleApplyChanges = (content) => {\r\n    const latexMatch = content.match(/```latex\\n([\\s\\S]*?)```/);\r\n    if (latexMatch && latexMatch[1]) {\r\n      onApplyChanges(latexMatch[1]);\r\n    }\r\n  };\r\n  \r\n  // Format message content - handle LaTeX code blocks\r\n  const formatMessage = (content) => {\r\n    if (!content) return '';\r\n    \r\n    if (content.startsWith('Thinking...')) {\r\n      return (\r\n        <div className=\"thinking-indicator\">\r\n          <div className=\"typing-indicator\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n          <span className=\"thinking-text\">{content}</span>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    // Split by code blocks\r\n    const parts = [];\r\n    let lastIndex = 0;\r\n    \r\n    // Match ```latex ... ``` blocks\r\n    const codeBlockRegex = /```latex\\n([\\s\\S]*?)```/g;\r\n    let match;\r\n    \r\n    while ((match = codeBlockRegex.exec(content)) !== null) {\r\n      // Add text before code block\r\n      if (match.index > lastIndex) {\r\n        parts.push({\r\n          type: 'text',\r\n          content: content.substring(lastIndex, match.index)\r\n        });\r\n      }\r\n      \r\n      // Add the code block\r\n      parts.push({\r\n        type: 'latex',\r\n        content: match[1]\r\n      });\r\n      \r\n      lastIndex = match.index + match[0].length;\r\n    }\r\n    \r\n    // Add any remaining text\r\n    if (lastIndex < content.length) {\r\n      parts.push({\r\n        type: 'text',\r\n        content: content.substring(lastIndex)\r\n      });\r\n    }\r\n    \r\n    // Render parts\r\n    return parts.map((part, index) => {\r\n      if (part.type === 'text') {\r\n        // Format markdown-style syntax in text parts\r\n        const formattedText = part.content\r\n          .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n          .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n          .replace(/`(.*?)`/g, '<code>$1</code>');\r\n          \r\n        return (\r\n          <div \r\n            key={index} \r\n            className=\"text-content\"\r\n            dangerouslySetInnerHTML={{ __html: formattedText }}\r\n          />\r\n        );\r\n      } else {\r\n        return (\r\n          <div key={index} className=\"latex-block-container\">\r\n            <pre className=\"latex-block\">\r\n              <div className=\"latex-header\">\r\n                <span>LaTeX Code</span>\r\n              </div>\r\n              <code>{part.content}</code>\r\n            </pre>\r\n            <button \r\n              className=\"apply-btn\"\r\n              onClick={() => handleApplyChanges('```latex\\n' + part.content + '```')}\r\n            >\r\n              <i className=\"fa fa-check-circle\"></i> Apply Changes\r\n            </button>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  };\r\n  \r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendPrompt();\r\n    }\r\n  };\r\n  \r\n  const handleMaximize = () => {\r\n    setIsMinimized(false);\r\n    setIsCollapsed(false);\r\n  };\r\n  \r\n  const handleMinimize = () => {\r\n    setIsMinimized(true);\r\n    setIsCollapsed(false);\r\n  };\r\n  \r\n  const handleCollapse = () => {\r\n    setIsCollapsed(!isCollapsed);\r\n    setIsMinimized(false);\r\n  };\r\n\r\n  return (\r\n    <div className={`ai-assistant ${darkMode ? 'dark-mode' : ''} ${isMinimized ? 'minimized' : ''} ${isCollapsed ? 'collapsed' : ''}`}>\r\n      <div className=\"assistant-header\">\r\n        <div className=\"assistant-title\">\r\n          <i className=\"fa fa-robot\"></i>\r\n          <span>AI Assistant</span>\r\n        </div>\r\n        \r\n        <div className=\"assistant-controls\">\r\n          <button \r\n            className=\"assistant-control\"\r\n            onClick={handleMinimize}\r\n            title=\"Minimize\"\r\n          >\r\n            <i className=\"fa fa-window-minimize\"></i>\r\n          </button>\r\n          \r\n          <button \r\n            className=\"assistant-control\"\r\n            onClick={handleCollapse}\r\n            title={isCollapsed ? \"Expand\" : \"Collapse\"}\r\n          >\r\n            <i className={`fa fa-${isCollapsed ? 'expand' : 'compress'}`}></i>\r\n          </button>\r\n          \r\n          <button \r\n            className=\"assistant-control close\"\r\n            onClick={() => setIsMinimized(true)}\r\n            title=\"Close\"\r\n          >\r\n            <i className=\"fa fa-times\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {!isMinimized && (\r\n        <>\r\n          {!isCollapsed && (\r\n            <div className=\"model-selector-container\">\r\n              <ModelSelector \r\n                selectedModel={selectedModel}\r\n                onModelChange={setSelectedModel}\r\n                darkMode={darkMode}\r\n              />\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"assistant-body\" ref={chatBodyRef}>\r\n            <div className=\"messages-container\">\r\n              {conversation.map((msg, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`message ${msg.role}`}\r\n                >\r\n                  <div className=\"message-avatar\">\r\n                    {msg.role === 'ai' ? (\r\n                      <i className=\"fa fa-robot\"></i>\r\n                    ) : (\r\n                      <i className=\"fa fa-user\"></i>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"message-content\">\r\n                    {msg.role === 'ai' ? formatMessage(msg.content) : msg.content}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"assistant-input\">\r\n            <textarea\r\n              ref={inputRef}\r\n              value={prompt}\r\n              onChange={(e) => setPrompt(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"Ask how to improve your resume...\"\r\n              disabled={isLoading}\r\n              rows={1}\r\n            />\r\n            <button\r\n              className={`send-button ${isLoading || !prompt.trim() ? 'disabled' : ''}`}\r\n              onClick={handleSendPrompt}\r\n              disabled={isLoading || !prompt.trim()}\r\n            >\r\n              {isLoading ? (\r\n                <div className=\"button-spinner\"></div>\r\n              ) : (\r\n                <i className=\"fa fa-paper-plane\"></i>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n      \r\n      {isMinimized && (\r\n        <div className=\"minimized-indicator\" onClick={handleMaximize}>\r\n          <i className=\"fa fa-robot\"></i>\r\n          <span>Open AI Assistant</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AIAssistant;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}