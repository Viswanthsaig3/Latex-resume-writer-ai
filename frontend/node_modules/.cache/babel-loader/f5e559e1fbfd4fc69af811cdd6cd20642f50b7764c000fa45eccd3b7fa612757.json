{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\viswa\\\\Downloads\\\\Latex resume writer ai\\\\frontend\\\\src\\\\components\\\\AIAssistant.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: {\n    position: 'absolute',\n    bottom: '20px',\n    left: '20px',\n    width: 'calc(50% - 40px)',\n    height: '350px',\n    backgroundColor: '#ffffff',\n    borderRadius: '10px',\n    boxShadow: '0 10px 25px rgba(0, 0, 0, 0.15)',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden',\n    zIndex: 1000,\n    border: '1px solid #e5e7eb',\n    fontFamily: \"'Inter', system-ui, sans-serif\"\n  },\n  minimized: {\n    height: '50px'\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px 15px',\n    backgroundColor: '#4F46E5',\n    // Indigo color\n    color: 'white',\n    fontSize: '16px',\n    fontWeight: '600'\n  },\n  toggleButton: {\n    backgroundColor: 'transparent',\n    border: 'none',\n    color: 'white',\n    cursor: 'pointer',\n    fontSize: '18px'\n  },\n  body: {\n    flex: 1,\n    padding: '15px',\n    overflowY: 'auto',\n    backgroundColor: '#f9fafb'\n  },\n  chatMessages: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '12px'\n  },\n  message: {\n    padding: '12px 16px',\n    borderRadius: '10px',\n    maxWidth: '85%',\n    fontSize: '14px',\n    lineHeight: '1.5'\n  },\n  userMessage: {\n    backgroundColor: '#4F46E5',\n    color: 'white',\n    alignSelf: 'flex-end'\n  },\n  aiMessage: {\n    backgroundColor: '#ffffff',\n    color: '#1f2937',\n    border: '1px solid #e5e7eb',\n    alignSelf: 'flex-start'\n  },\n  inputArea: {\n    padding: '12px',\n    borderTop: '1px solid #e5e7eb',\n    backgroundColor: 'white',\n    display: 'flex'\n  },\n  input: {\n    flex: 1,\n    padding: '10px 15px',\n    border: '1px solid #d1d5db',\n    borderRadius: '20px',\n    fontSize: '14px',\n    outline: 'none'\n  },\n  sendButton: {\n    padding: '0 20px',\n    backgroundColor: '#4F46E5',\n    color: 'white',\n    border: 'none',\n    borderRadius: '20px',\n    marginLeft: '10px',\n    cursor: 'pointer',\n    fontSize: '14px',\n    fontWeight: '600'\n  },\n  disabledButton: {\n    backgroundColor: '#a5b4fc',\n    cursor: 'not-allowed'\n  },\n  latexBlock: {\n    backgroundColor: '#f8fafc',\n    padding: '12px',\n    borderRadius: '6px',\n    borderLeft: '3px solid #4F46E5',\n    fontFamily: \"'Courier New', monospace\",\n    fontSize: '13px',\n    overflowX: 'auto',\n    whiteSpace: 'pre-wrap',\n    margin: '8px 0'\n  },\n  applyButton: {\n    backgroundColor: '#10B981',\n    color: 'white',\n    border: 'none',\n    borderRadius: '6px',\n    padding: '6px 12px',\n    fontSize: '13px',\n    cursor: 'pointer',\n    marginTop: '8px'\n  }\n};\nfunction AIAssistant({\n  latexCode,\n  onApplyChanges\n}) {\n  _s();\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [prompt, setPrompt] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversation, setConversation] = useState([{\n    role: 'ai',\n    content: 'Hello! I can help improve your resume. What would you like me to help with?'\n  }]);\n  const chatBodyRef = useRef(null);\n  useEffect(() => {\n    if (chatBodyRef.current) {\n      chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\n    }\n  }, [conversation]);\n  const handleSendPrompt = async () => {\n    if (!prompt.trim() || isLoading) return;\n\n    // Add user message to conversation\n    const userMessage = {\n      role: 'user',\n      content: prompt\n    };\n    setConversation(prev => [...prev, userMessage]);\n\n    // Clear input field\n    setPrompt('');\n\n    // Start loading\n    setIsLoading(true);\n    try {\n      // Add temporary \"typing\" message\n      setConversation(prev => [...prev, {\n        role: 'ai',\n        content: 'Thinking...',\n        isTemporary: true\n      }]);\n\n      // Call the backend API\n      const response = await axios.post('http://localhost:5001/ai/improve-resume', {\n        prompt,\n        latex: latexCode\n      }, {\n        timeout: 60000 // 60 seconds timeout\n      });\n\n      // Remove temporary message\n      setConversation(prev => prev.filter(msg => !msg.isTemporary));\n      if (response.data && response.data.success) {\n        setConversation(prev => [...prev, {\n          role: 'ai',\n          content: response.data.response\n        }]);\n      } else {\n        throw new Error('Failed to get response from AI');\n      }\n    } catch (error) {\n      console.error('Error getting AI response:', error);\n\n      // Remove temporary message\n      setConversation(prev => prev.filter(msg => !msg.isTemporary));\n\n      // Add error message\n      setConversation(prev => [...prev, {\n        role: 'ai',\n        content: \"I'm having trouble connecting. Please try again or check your network connection.\"\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Extract and apply LaTeX code from AI message\n  const handleApplyChanges = content => {\n    const latexMatch = content.match(/```latex\\n([\\s\\S]*?)```/);\n    if (latexMatch && latexMatch[1]) {\n      onApplyChanges(latexMatch[1]);\n    }\n  };\n\n  // Format message content - handle LaTeX code blocks\n  const formatMessage = content => {\n    if (!content) return '';\n\n    // Check if this is a loading message\n    if (content === 'Thinking...') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontStyle: 'italic'\n        },\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Split by code blocks\n    const parts = [];\n    let lastIndex = 0;\n\n    // Regular expression to match ```latex ... ``` blocks\n    const codeBlockRegex = /```latex\\n([\\s\\S]*?)```/g;\n    let match;\n    while ((match = codeBlockRegex.exec(content)) !== null) {\n      // Add text before code block\n      if (match.index > lastIndex) {\n        parts.push({\n          type: 'text',\n          content: content.substring(lastIndex, match.index)\n        });\n      }\n\n      // Add the code block\n      parts.push({\n        type: 'latex',\n        content: match[1]\n      });\n      lastIndex = match.index + match[0].length;\n    }\n\n    // Add any remaining text\n    if (lastIndex < content.length) {\n      parts.push({\n        type: 'text',\n        content: content.substring(lastIndex)\n      });\n    }\n\n    // Render parts\n    return parts.map((part, index) => {\n      if (part.type === 'text') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: part.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 16\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.latexBlock,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 'bold',\n                marginBottom: '5px',\n                color: '#4F46E5'\n              },\n              children: \"LaTeX Code:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), part.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.applyButton,\n            onClick: () => handleApplyChanges('```latex\\n' + part.content + '```'),\n            children: \"Apply Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendPrompt();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      ...styles.container,\n      ...(isMinimized ? styles.minimized : {})\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Resume AI Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.toggleButton,\n        onClick: () => setIsMinimized(!isMinimized),\n        children: isMinimized ? '▲' : '▼'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), !isMinimized && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.body,\n        ref: chatBodyRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.chatMessages,\n          children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              ...styles.message,\n              ...(msg.role === 'user' ? styles.userMessage : styles.aiMessage)\n            },\n            children: msg.role === 'ai' ? formatMessage(msg.content) : msg.content\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.inputArea,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: prompt,\n          onChange: e => setPrompt(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Ask how to improve your resume...\",\n          style: styles.input,\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendPrompt,\n          style: {\n            ...styles.sendButton,\n            ...(isLoading || !prompt.trim() ? styles.disabledButton : {})\n          },\n          disabled: isLoading || !prompt.trim(),\n          children: isLoading ? 'Sending...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n}\n_s(AIAssistant, \"UqxvuU2l4FgSAcBUg4vgxJ1Ht8c=\");\n_c = AIAssistant;\nexport default AIAssistant;\nvar _c;\n$RefreshReg$(_c, \"AIAssistant\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","styles","container","position","bottom","left","width","height","backgroundColor","borderRadius","boxShadow","display","flexDirection","overflow","zIndex","border","fontFamily","minimized","header","justifyContent","alignItems","padding","color","fontSize","fontWeight","toggleButton","cursor","body","flex","overflowY","chatMessages","gap","message","maxWidth","lineHeight","userMessage","alignSelf","aiMessage","inputArea","borderTop","input","outline","sendButton","marginLeft","disabledButton","latexBlock","borderLeft","overflowX","whiteSpace","margin","applyButton","marginTop","AIAssistant","latexCode","onApplyChanges","_s","isMinimized","setIsMinimized","prompt","setPrompt","isLoading","setIsLoading","conversation","setConversation","role","content","chatBodyRef","current","scrollTop","scrollHeight","handleSendPrompt","trim","prev","isTemporary","response","post","latex","timeout","filter","msg","data","success","Error","error","console","handleApplyChanges","latexMatch","match","formatMessage","style","fontStyle","children","fileName","_jsxFileName","lineNumber","columnNumber","parts","lastIndex","codeBlockRegex","exec","index","push","type","substring","length","map","part","marginBottom","onClick","handleKeyPress","e","key","shiftKey","preventDefault","ref","value","onChange","target","onKeyPress","placeholder","disabled","_c","$RefreshReg$"],"sources":["c:/Users/viswa/Downloads/Latex resume writer ai/frontend/src/components/AIAssistant.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst styles = {\r\n  container: {\r\n    position: 'absolute',\r\n    bottom: '20px',\r\n    left: '20px',\r\n    width: 'calc(50% - 40px)',\r\n    height: '350px',\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: '10px',\r\n    boxShadow: '0 10px 25px rgba(0, 0, 0, 0.15)',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflow: 'hidden',\r\n    zIndex: 1000,\r\n    border: '1px solid #e5e7eb',\r\n    fontFamily: \"'Inter', system-ui, sans-serif\",\r\n  },\r\n  minimized: {\r\n    height: '50px',\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '10px 15px',\r\n    backgroundColor: '#4F46E5', // Indigo color\r\n    color: 'white',\r\n    fontSize: '16px',\r\n    fontWeight: '600',\r\n  },\r\n  toggleButton: {\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    color: 'white',\r\n    cursor: 'pointer',\r\n    fontSize: '18px',\r\n  },\r\n  body: {\r\n    flex: 1,\r\n    padding: '15px',\r\n    overflowY: 'auto',\r\n    backgroundColor: '#f9fafb',\r\n  },\r\n  chatMessages: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '12px',\r\n  },\r\n  message: {\r\n    padding: '12px 16px',\r\n    borderRadius: '10px',\r\n    maxWidth: '85%',\r\n    fontSize: '14px',\r\n    lineHeight: '1.5',\r\n  },\r\n  userMessage: {\r\n    backgroundColor: '#4F46E5',\r\n    color: 'white',\r\n    alignSelf: 'flex-end',\r\n  },\r\n  aiMessage: {\r\n    backgroundColor: '#ffffff',\r\n    color: '#1f2937',\r\n    border: '1px solid #e5e7eb',\r\n    alignSelf: 'flex-start',\r\n  },\r\n  inputArea: {\r\n    padding: '12px',\r\n    borderTop: '1px solid #e5e7eb',\r\n    backgroundColor: 'white',\r\n    display: 'flex',\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    padding: '10px 15px',\r\n    border: '1px solid #d1d5db',\r\n    borderRadius: '20px',\r\n    fontSize: '14px',\r\n    outline: 'none',\r\n  },\r\n  sendButton: {\r\n    padding: '0 20px',\r\n    backgroundColor: '#4F46E5',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '20px',\r\n    marginLeft: '10px',\r\n    cursor: 'pointer',\r\n    fontSize: '14px',\r\n    fontWeight: '600',\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: '#a5b4fc',\r\n    cursor: 'not-allowed',\r\n  },\r\n  latexBlock: {\r\n    backgroundColor: '#f8fafc',\r\n    padding: '12px',\r\n    borderRadius: '6px',\r\n    borderLeft: '3px solid #4F46E5',\r\n    fontFamily: \"'Courier New', monospace\",\r\n    fontSize: '13px',\r\n    overflowX: 'auto',\r\n    whiteSpace: 'pre-wrap',\r\n    margin: '8px 0',\r\n  },\r\n  applyButton: {\r\n    backgroundColor: '#10B981',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '6px',\r\n    padding: '6px 12px',\r\n    fontSize: '13px',\r\n    cursor: 'pointer',\r\n    marginTop: '8px',\r\n  }\r\n};\r\n\r\nfunction AIAssistant({ latexCode, onApplyChanges }) {\r\n  const [isMinimized, setIsMinimized] = useState(false);\r\n  const [prompt, setPrompt] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [conversation, setConversation] = useState([\r\n    {\r\n      role: 'ai',\r\n      content: 'Hello! I can help improve your resume. What would you like me to help with?'\r\n    }\r\n  ]);\r\n  \r\n  const chatBodyRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    if (chatBodyRef.current) {\r\n      chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\r\n    }\r\n  }, [conversation]);\r\n  \r\n  const handleSendPrompt = async () => {\r\n    if (!prompt.trim() || isLoading) return;\r\n    \r\n    // Add user message to conversation\r\n    const userMessage = { role: 'user', content: prompt };\r\n    setConversation(prev => [...prev, userMessage]);\r\n    \r\n    // Clear input field\r\n    setPrompt('');\r\n    \r\n    // Start loading\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // Add temporary \"typing\" message\r\n      setConversation(prev => [\r\n        ...prev, \r\n        { role: 'ai', content: 'Thinking...', isTemporary: true }\r\n      ]);\r\n      \r\n      // Call the backend API\r\n      const response = await axios.post('http://localhost:5001/ai/improve-resume', {\r\n        prompt,\r\n        latex: latexCode\r\n      }, { \r\n        timeout: 60000 // 60 seconds timeout\r\n      });\r\n      \r\n      // Remove temporary message\r\n      setConversation(prev => prev.filter(msg => !msg.isTemporary));\r\n      \r\n      if (response.data && response.data.success) {\r\n        setConversation(prev => [...prev, { role: 'ai', content: response.data.response }]);\r\n      } else {\r\n        throw new Error('Failed to get response from AI');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting AI response:', error);\r\n      \r\n      // Remove temporary message\r\n      setConversation(prev => prev.filter(msg => !msg.isTemporary));\r\n      \r\n      // Add error message\r\n      setConversation(prev => [\r\n        ...prev, \r\n        { role: 'ai', content: \"I'm having trouble connecting. Please try again or check your network connection.\" }\r\n      ]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Extract and apply LaTeX code from AI message\r\n  const handleApplyChanges = (content) => {\r\n    const latexMatch = content.match(/```latex\\n([\\s\\S]*?)```/);\r\n    if (latexMatch && latexMatch[1]) {\r\n      onApplyChanges(latexMatch[1]);\r\n    }\r\n  };\r\n  \r\n  // Format message content - handle LaTeX code blocks\r\n  const formatMessage = (content) => {\r\n    if (!content) return '';\r\n    \r\n    // Check if this is a loading message\r\n    if (content === 'Thinking...') {\r\n      return <div style={{fontStyle: 'italic'}}>{content}</div>;\r\n    }\r\n    \r\n    // Split by code blocks\r\n    const parts = [];\r\n    let lastIndex = 0;\r\n    \r\n    // Regular expression to match ```latex ... ``` blocks\r\n    const codeBlockRegex = /```latex\\n([\\s\\S]*?)```/g;\r\n    let match;\r\n    \r\n    while ((match = codeBlockRegex.exec(content)) !== null) {\r\n      // Add text before code block\r\n      if (match.index > lastIndex) {\r\n        parts.push({\r\n          type: 'text',\r\n          content: content.substring(lastIndex, match.index)\r\n        });\r\n      }\r\n      \r\n      // Add the code block\r\n      parts.push({\r\n        type: 'latex',\r\n        content: match[1]\r\n      });\r\n      \r\n      lastIndex = match.index + match[0].length;\r\n    }\r\n    \r\n    // Add any remaining text\r\n    if (lastIndex < content.length) {\r\n      parts.push({\r\n        type: 'text',\r\n        content: content.substring(lastIndex)\r\n      });\r\n    }\r\n    \r\n    // Render parts\r\n    return parts.map((part, index) => {\r\n      if (part.type === 'text') {\r\n        return <div key={index}>{part.content}</div>;\r\n      } else {\r\n        return (\r\n          <div key={index}>\r\n            <div style={styles.latexBlock}>\r\n              <div style={{fontWeight: 'bold', marginBottom: '5px', color: '#4F46E5'}}>LaTeX Code:</div>\r\n              {part.content}\r\n            </div>\r\n            <button \r\n              style={styles.applyButton}\r\n              onClick={() => handleApplyChanges('```latex\\n' + part.content + '```')}\r\n            >\r\n              Apply Changes\r\n            </button>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  };\r\n  \r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendPrompt();\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div style={{...styles.container, ...(isMinimized ? styles.minimized : {})}}>\r\n      <div style={styles.header}>\r\n        <div>Resume AI Assistant</div>\r\n        <button\r\n          style={styles.toggleButton}\r\n          onClick={() => setIsMinimized(!isMinimized)}\r\n        >\r\n          {isMinimized ? '▲' : '▼'}\r\n        </button>\r\n      </div>\r\n      \r\n      {!isMinimized && (\r\n        <>\r\n          <div style={styles.body} ref={chatBodyRef}>\r\n            <div style={styles.chatMessages}>\r\n              {conversation.map((msg, index) => (\r\n                <div\r\n                  key={index}\r\n                  style={{\r\n                    ...styles.message,\r\n                    ...(msg.role === 'user' ? styles.userMessage : styles.aiMessage)\r\n                  }}\r\n                >\r\n                  {msg.role === 'ai' ? formatMessage(msg.content) : msg.content}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          <div style={styles.inputArea}>\r\n            <input\r\n              type=\"text\"\r\n              value={prompt}\r\n              onChange={(e) => setPrompt(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"Ask how to improve your resume...\"\r\n              style={styles.input}\r\n              disabled={isLoading}\r\n            />\r\n            <button\r\n              onClick={handleSendPrompt}\r\n              style={{\r\n                ...styles.sendButton,\r\n                ...(isLoading || !prompt.trim() ? styles.disabledButton : {})\r\n              }}\r\n              disabled={isLoading || !prompt.trim()}\r\n            >\r\n              {isLoading ? 'Sending...' : 'Send'}\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AIAssistant;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}