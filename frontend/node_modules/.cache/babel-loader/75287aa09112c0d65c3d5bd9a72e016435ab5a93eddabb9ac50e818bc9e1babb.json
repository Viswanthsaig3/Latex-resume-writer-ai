{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\viswa\\\\Downloads\\\\Latex resume writer ai\\\\frontend\\\\src\\\\components\\\\AIAssistant.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport ModelSelector from './ModelSelector';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: {\n    position: 'absolute',\n    bottom: '20px',\n    left: '20px',\n    width: 'calc(50% - 40px)',\n    height: '350px',\n    backgroundColor: '#ffffff',\n    borderRadius: '10px',\n    boxShadow: '0 10px 25px rgba(0, 0, 0, 0.15)',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden',\n    zIndex: 1000,\n    border: '1px solid #e5e7eb',\n    fontFamily: \"'Inter', system-ui, sans-serif\"\n  },\n  minimized: {\n    height: '50px'\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px 15px',\n    backgroundColor: '#4F46E5',\n    // Indigo color\n    color: 'white',\n    fontSize: '16px',\n    fontWeight: '600'\n  },\n  toggleButton: {\n    backgroundColor: 'transparent',\n    border: 'none',\n    color: 'white',\n    cursor: 'pointer',\n    fontSize: '18px'\n  },\n  body: {\n    flex: 1,\n    padding: '15px',\n    overflowY: 'auto',\n    backgroundColor: '#f9fafb'\n  },\n  chatMessages: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '12px'\n  },\n  message: {\n    padding: '12px 16px',\n    borderRadius: '10px',\n    maxWidth: '85%',\n    fontSize: '14px',\n    lineHeight: '1.5'\n  },\n  userMessage: {\n    backgroundColor: '#4F46E5',\n    color: 'white',\n    alignSelf: 'flex-end'\n  },\n  aiMessage: {\n    backgroundColor: '#ffffff',\n    color: '#1f2937',\n    border: '1px solid #e5e7eb',\n    alignSelf: 'flex-start'\n  },\n  inputArea: {\n    padding: '12px',\n    borderTop: '1px solid #e5e7eb',\n    backgroundColor: 'white',\n    display: 'flex'\n  },\n  input: {\n    flex: 1,\n    padding: '10px 15px',\n    border: '1px solid #d1d5db',\n    borderRadius: '20px',\n    fontSize: '14px',\n    outline: 'none'\n  },\n  sendButton: {\n    padding: '0 20px',\n    backgroundColor: '#4F46E5',\n    color: 'white',\n    border: 'none',\n    borderRadius: '20px',\n    marginLeft: '10px',\n    cursor: 'pointer',\n    fontSize: '14px',\n    fontWeight: '600'\n  },\n  disabledButton: {\n    backgroundColor: '#a5b4fc',\n    cursor: 'not-allowed'\n  },\n  latexBlock: {\n    backgroundColor: '#f8fafc',\n    padding: '12px',\n    borderRadius: '6px',\n    borderLeft: '3px solid #4F46E5',\n    fontFamily: \"'Courier New', monospace\",\n    fontSize: '13px',\n    overflowX: 'auto',\n    whiteSpace: 'pre-wrap',\n    margin: '8px 0'\n  },\n  applyButton: {\n    backgroundColor: '#10B981',\n    color: 'white',\n    border: 'none',\n    borderRadius: '6px',\n    padding: '6px 12px',\n    fontSize: '13px',\n    cursor: 'pointer',\n    marginTop: '8px'\n  },\n  modelSelectorContainer: {\n    padding: '6px 12px',\n    borderBottom: '1px solid #e5e7eb',\n    backgroundColor: '#f9fafb'\n  }\n};\nfunction AIAssistant({\n  latexCode,\n  onApplyChanges\n}) {\n  _s();\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [prompt, setPrompt] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedModel, setSelectedModel] = useState('gpt3.5'); // Changed default to gpt3.5 (GPT-4o)\n  const [conversation, setConversation] = useState([{\n    role: 'ai',\n    content: 'Hello! I can help improve your resume using advanced AI. What would you like me to help with?'\n  }]);\n  const chatBodyRef = useRef(null);\n  useEffect(() => {\n    if (chatBodyRef.current) {\n      chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\n    }\n  }, [conversation]);\n  const handleSendPrompt = async () => {\n    if (!prompt.trim() || isLoading) return;\n\n    // Add user message to conversation\n    const userMessage = {\n      role: 'user',\n      content: prompt\n    };\n    setConversation(prev => [...prev, userMessage]);\n\n    // Clear input field\n    setPrompt('');\n\n    // Start loading\n    setIsLoading(true);\n    try {\n      // Add temporary \"thinking\" message with model info\n      setConversation(prev => [...prev, {\n        role: 'ai',\n        content: `Thinking... (using ${selectedModel})`,\n        isTemporary: true\n      }]);\n\n      // Call the backend API with the selected model\n      const response = await axios.post('http://localhost:5001/ai/improve-resume', {\n        prompt,\n        latex: latexCode,\n        modelId: selectedModel // Pass the selected model to the backend\n      }, {\n        timeout: 90000 // 90 seconds timeout - increased for larger responses\n      });\n\n      // Remove temporary message\n      setConversation(prev => prev.filter(msg => !msg.isTemporary));\n      if (response.data && response.data.success) {\n        setConversation(prev => [...prev, {\n          role: 'ai',\n          content: response.data.response\n        }]);\n      } else {\n        var _response$data;\n        throw new Error(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.error) || 'Failed to get response from AI');\n      }\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Error getting AI response:', error);\n\n      // Remove temporary message\n      setConversation(prev => prev.filter(msg => !msg.isTemporary));\n\n      // Add error message with more context\n      const errorMsg = (_error$response = error.response) !== null && _error$response !== void 0 && _error$response.status ? `Error ${error.response.status}: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message}` : error.message || \"Unknown error\";\n      setConversation(prev => [...prev, {\n        role: 'ai',\n        content: `I'm having trouble connecting to the AI model. ${errorMsg}\\n\\nPlease try again or select a different model from the dropdown.`\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Extract and apply LaTeX code from AI message\n  const handleApplyChanges = content => {\n    const latexMatch = content.match(/```latex\\n([\\s\\S]*?)```/);\n    if (latexMatch && latexMatch[1]) {\n      onApplyChanges(latexMatch[1]);\n    }\n  };\n\n  // Format message content - handle LaTeX code blocks\n  const formatMessage = content => {\n    if (!content) return '';\n\n    // Check if this is a loading message\n    if (content === 'Thinking...') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontStyle: 'italic'\n        },\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Split by code blocks\n    const parts = [];\n    let lastIndex = 0;\n\n    // Regular expression to match ```latex ... ``` blocks\n    const codeBlockRegex = /```latex\\n([\\s\\S]*?)```/g;\n    let match;\n    while ((match = codeBlockRegex.exec(content)) !== null) {\n      // Add text before code block\n      if (match.index > lastIndex) {\n        parts.push({\n          type: 'text',\n          content: content.substring(lastIndex, match.index)\n        });\n      }\n\n      // Add the code block\n      parts.push({\n        type: 'latex',\n        content: match[1]\n      });\n      lastIndex = match.index + match[0].length;\n    }\n\n    // Add any remaining text\n    if (lastIndex < content.length) {\n      parts.push({\n        type: 'text',\n        content: content.substring(lastIndex)\n      });\n    }\n\n    // Render parts\n    return parts.map((part, index) => {\n      if (part.type === 'text') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: part.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 16\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.latexBlock,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 'bold',\n                marginBottom: '5px',\n                color: '#4F46E5'\n              },\n              children: \"LaTeX Code:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), part.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.applyButton,\n            onClick: () => handleApplyChanges('```latex\\n' + part.content + '```'),\n            children: \"Apply Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendPrompt();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      ...styles.container,\n      ...(isMinimized ? styles.minimized : {})\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Resume AI Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.toggleButton,\n        onClick: () => setIsMinimized(!isMinimized),\n        children: isMinimized ? '▲' : '▼'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), !isMinimized && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.modelSelectorContainer,\n        children: /*#__PURE__*/_jsxDEV(ModelSelector, {\n          selectedModel: selectedModel,\n          onModelChange: setSelectedModel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.body,\n        ref: chatBodyRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.chatMessages,\n          children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              ...styles.message,\n              ...(msg.role === 'user' ? styles.userMessage : styles.aiMessage)\n            },\n            children: msg.role === 'ai' ? formatMessage(msg.content) : msg.content\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.inputArea,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: prompt,\n          onChange: e => setPrompt(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Ask how to improve your resume...\",\n          style: styles.input,\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendPrompt,\n          style: {\n            ...styles.sendButton,\n            ...(isLoading || !prompt.trim() ? styles.disabledButton : {})\n          },\n          disabled: isLoading || !prompt.trim(),\n          children: isLoading ? 'Sending...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n}\n_s(AIAssistant, \"vpk1OmUv8xx9/CczWyqrUwYLuSU=\");\n_c = AIAssistant;\nexport default AIAssistant;\nvar _c;\n$RefreshReg$(_c, \"AIAssistant\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","ModelSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","styles","container","position","bottom","left","width","height","backgroundColor","borderRadius","boxShadow","display","flexDirection","overflow","zIndex","border","fontFamily","minimized","header","justifyContent","alignItems","padding","color","fontSize","fontWeight","toggleButton","cursor","body","flex","overflowY","chatMessages","gap","message","maxWidth","lineHeight","userMessage","alignSelf","aiMessage","inputArea","borderTop","input","outline","sendButton","marginLeft","disabledButton","latexBlock","borderLeft","overflowX","whiteSpace","margin","applyButton","marginTop","modelSelectorContainer","borderBottom","AIAssistant","latexCode","onApplyChanges","_s","isMinimized","setIsMinimized","prompt","setPrompt","isLoading","setIsLoading","selectedModel","setSelectedModel","conversation","setConversation","role","content","chatBodyRef","current","scrollTop","scrollHeight","handleSendPrompt","trim","prev","isTemporary","response","post","latex","modelId","timeout","filter","msg","data","success","_response$data","Error","error","_error$response","_error$response2","_error$response2$data","console","errorMsg","status","handleApplyChanges","latexMatch","match","formatMessage","style","fontStyle","children","fileName","_jsxFileName","lineNumber","columnNumber","parts","lastIndex","codeBlockRegex","exec","index","push","type","substring","length","map","part","marginBottom","onClick","handleKeyPress","e","key","shiftKey","preventDefault","onModelChange","ref","value","onChange","target","onKeyPress","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/viswa/Downloads/Latex resume writer ai/frontend/src/components/AIAssistant.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ModelSelector from './ModelSelector';\r\n\r\nconst styles = {\r\n  container: {\r\n    position: 'absolute',\r\n    bottom: '20px',\r\n    left: '20px',\r\n    width: 'calc(50% - 40px)',\r\n    height: '350px',\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: '10px',\r\n    boxShadow: '0 10px 25px rgba(0, 0, 0, 0.15)',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflow: 'hidden',\r\n    zIndex: 1000,\r\n    border: '1px solid #e5e7eb',\r\n    fontFamily: \"'Inter', system-ui, sans-serif\",\r\n  },\r\n  minimized: {\r\n    height: '50px',\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '10px 15px',\r\n    backgroundColor: '#4F46E5', // Indigo color\r\n    color: 'white',\r\n    fontSize: '16px',\r\n    fontWeight: '600',\r\n  },\r\n  toggleButton: {\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    color: 'white',\r\n    cursor: 'pointer',\r\n    fontSize: '18px',\r\n  },\r\n  body: {\r\n    flex: 1,\r\n    padding: '15px',\r\n    overflowY: 'auto',\r\n    backgroundColor: '#f9fafb',\r\n  },\r\n  chatMessages: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '12px',\r\n  },\r\n  message: {\r\n    padding: '12px 16px',\r\n    borderRadius: '10px',\r\n    maxWidth: '85%',\r\n    fontSize: '14px',\r\n    lineHeight: '1.5',\r\n  },\r\n  userMessage: {\r\n    backgroundColor: '#4F46E5',\r\n    color: 'white',\r\n    alignSelf: 'flex-end',\r\n  },\r\n  aiMessage: {\r\n    backgroundColor: '#ffffff',\r\n    color: '#1f2937',\r\n    border: '1px solid #e5e7eb',\r\n    alignSelf: 'flex-start',\r\n  },\r\n  inputArea: {\r\n    padding: '12px',\r\n    borderTop: '1px solid #e5e7eb',\r\n    backgroundColor: 'white',\r\n    display: 'flex',\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    padding: '10px 15px',\r\n    border: '1px solid #d1d5db',\r\n    borderRadius: '20px',\r\n    fontSize: '14px',\r\n    outline: 'none',\r\n  },\r\n  sendButton: {\r\n    padding: '0 20px',\r\n    backgroundColor: '#4F46E5',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '20px',\r\n    marginLeft: '10px',\r\n    cursor: 'pointer',\r\n    fontSize: '14px',\r\n    fontWeight: '600',\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: '#a5b4fc',\r\n    cursor: 'not-allowed',\r\n  },\r\n  latexBlock: {\r\n    backgroundColor: '#f8fafc',\r\n    padding: '12px',\r\n    borderRadius: '6px',\r\n    borderLeft: '3px solid #4F46E5',\r\n    fontFamily: \"'Courier New', monospace\",\r\n    fontSize: '13px',\r\n    overflowX: 'auto',\r\n    whiteSpace: 'pre-wrap',\r\n    margin: '8px 0',\r\n  },\r\n  applyButton: {\r\n    backgroundColor: '#10B981',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '6px',\r\n    padding: '6px 12px',\r\n    fontSize: '13px',\r\n    cursor: 'pointer',\r\n    marginTop: '8px',\r\n  },\r\n  modelSelectorContainer: {\r\n    padding: '6px 12px',\r\n    borderBottom: '1px solid #e5e7eb',\r\n    backgroundColor: '#f9fafb',\r\n  }\r\n};\r\n\r\nfunction AIAssistant({ latexCode, onApplyChanges }) {\r\n  const [isMinimized, setIsMinimized] = useState(false);\r\n  const [prompt, setPrompt] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedModel, setSelectedModel] = useState('gpt3.5'); // Changed default to gpt3.5 (GPT-4o)\r\n  const [conversation, setConversation] = useState([\r\n    {\r\n      role: 'ai',\r\n      content: 'Hello! I can help improve your resume using advanced AI. What would you like me to help with?'\r\n    }\r\n  ]);\r\n  \r\n  const chatBodyRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    if (chatBodyRef.current) {\r\n      chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\r\n    }\r\n  }, [conversation]);\r\n  \r\n  const handleSendPrompt = async () => {\r\n    if (!prompt.trim() || isLoading) return;\r\n    \r\n    // Add user message to conversation\r\n    const userMessage = { role: 'user', content: prompt };\r\n    setConversation(prev => [...prev, userMessage]);\r\n    \r\n    // Clear input field\r\n    setPrompt('');\r\n    \r\n    // Start loading\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // Add temporary \"thinking\" message with model info\r\n      setConversation(prev => [\r\n        ...prev, \r\n        { role: 'ai', content: `Thinking... (using ${selectedModel})`, isTemporary: true }\r\n      ]);\r\n      \r\n      // Call the backend API with the selected model\r\n      const response = await axios.post('http://localhost:5001/ai/improve-resume', {\r\n        prompt,\r\n        latex: latexCode,\r\n        modelId: selectedModel // Pass the selected model to the backend\r\n      }, { \r\n        timeout: 90000 // 90 seconds timeout - increased for larger responses\r\n      });\r\n      \r\n      // Remove temporary message\r\n      setConversation(prev => prev.filter(msg => !msg.isTemporary));\r\n      \r\n      if (response.data && response.data.success) {\r\n        setConversation(prev => [...prev, { role: 'ai', content: response.data.response }]);\r\n      } else {\r\n        throw new Error(response.data?.error || 'Failed to get response from AI');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting AI response:', error);\r\n      \r\n      // Remove temporary message\r\n      setConversation(prev => prev.filter(msg => !msg.isTemporary));\r\n      \r\n      // Add error message with more context\r\n      const errorMsg = error.response?.status \r\n        ? `Error ${error.response.status}: ${error.response?.data?.message || error.message}`\r\n        : error.message || \"Unknown error\";\r\n        \r\n      setConversation(prev => [\r\n        ...prev, \r\n        { \r\n          role: 'ai', \r\n          content: `I'm having trouble connecting to the AI model. ${errorMsg}\\n\\nPlease try again or select a different model from the dropdown.`\r\n        }\r\n      ]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Extract and apply LaTeX code from AI message\r\n  const handleApplyChanges = (content) => {\r\n    const latexMatch = content.match(/```latex\\n([\\s\\S]*?)```/);\r\n    if (latexMatch && latexMatch[1]) {\r\n      onApplyChanges(latexMatch[1]);\r\n    }\r\n  };\r\n  \r\n  // Format message content - handle LaTeX code blocks\r\n  const formatMessage = (content) => {\r\n    if (!content) return '';\r\n    \r\n    // Check if this is a loading message\r\n    if (content === 'Thinking...') {\r\n      return <div style={{fontStyle: 'italic'}}>{content}</div>;\r\n    }\r\n    \r\n    // Split by code blocks\r\n    const parts = [];\r\n    let lastIndex = 0;\r\n    \r\n    // Regular expression to match ```latex ... ``` blocks\r\n    const codeBlockRegex = /```latex\\n([\\s\\S]*?)```/g;\r\n    let match;\r\n    \r\n    while ((match = codeBlockRegex.exec(content)) !== null) {\r\n      // Add text before code block\r\n      if (match.index > lastIndex) {\r\n        parts.push({\r\n          type: 'text',\r\n          content: content.substring(lastIndex, match.index)\r\n        });\r\n      }\r\n      \r\n      // Add the code block\r\n      parts.push({\r\n        type: 'latex',\r\n        content: match[1]\r\n      });\r\n      \r\n      lastIndex = match.index + match[0].length;\r\n    }\r\n    \r\n    // Add any remaining text\r\n    if (lastIndex < content.length) {\r\n      parts.push({\r\n        type: 'text',\r\n        content: content.substring(lastIndex)\r\n      });\r\n    }\r\n    \r\n    // Render parts\r\n    return parts.map((part, index) => {\r\n      if (part.type === 'text') {\r\n        return <div key={index}>{part.content}</div>;\r\n      } else {\r\n        return (\r\n          <div key={index}>\r\n            <div style={styles.latexBlock}>\r\n              <div style={{fontWeight: 'bold', marginBottom: '5px', color: '#4F46E5'}}>LaTeX Code:</div>\r\n              {part.content}\r\n            </div>\r\n            <button \r\n              style={styles.applyButton}\r\n              onClick={() => handleApplyChanges('```latex\\n' + part.content + '```')}\r\n            >\r\n              Apply Changes\r\n            </button>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  };\r\n  \r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendPrompt();\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div style={{...styles.container, ...(isMinimized ? styles.minimized : {})}}>\r\n      <div style={styles.header}>\r\n        <div>Resume AI Assistant</div>\r\n        <button\r\n          style={styles.toggleButton}\r\n          onClick={() => setIsMinimized(!isMinimized)}\r\n        >\r\n          {isMinimized ? '▲' : '▼'}\r\n        </button>\r\n      </div>\r\n      \r\n      {!isMinimized && (\r\n        <>\r\n          <div style={styles.modelSelectorContainer}>\r\n            <ModelSelector \r\n              selectedModel={selectedModel}\r\n              onModelChange={setSelectedModel}\r\n            />\r\n          </div>\r\n          \r\n          <div style={styles.body} ref={chatBodyRef}>\r\n            <div style={styles.chatMessages}>\r\n              {conversation.map((msg, index) => (\r\n                <div\r\n                  key={index}\r\n                  style={{\r\n                    ...styles.message,\r\n                    ...(msg.role === 'user' ? styles.userMessage : styles.aiMessage)\r\n                  }}\r\n                >\r\n                  {msg.role === 'ai' ? formatMessage(msg.content) : msg.content}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          <div style={styles.inputArea}>\r\n            <input\r\n              type=\"text\"\r\n              value={prompt}\r\n              onChange={(e) => setPrompt(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"Ask how to improve your resume...\"\r\n              style={styles.input}\r\n              disabled={isLoading}\r\n            />\r\n            <button\r\n              onClick={handleSendPrompt}\r\n              style={{\r\n                ...styles.sendButton,\r\n                ...(isLoading || !prompt.trim() ? styles.disabledButton : {})\r\n              }}\r\n              disabled={isLoading || !prompt.trim()}\r\n            >\r\n              {isLoading ? 'Sending...' : 'Send'}\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AIAssistant;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}